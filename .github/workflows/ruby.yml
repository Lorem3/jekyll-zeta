# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  del_runs:
      runs-on: ubuntu-latest
      permissions:
        actions: write
        contents: read
      steps:
        - name: Delete workflow runs for current repo
          uses: Mattraks/delete-workflow-runs@v2
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            repository: ${{ github.repository }}
            retain_days: 2
            keep_minimum_runs: 2
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.2']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
    # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
    # change this to (see https://github.com/ruby/setup-ruby#versioning):
    # uses: ruby/setup-ruby@v1
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    # - name: bundle install
      # run: bundle install
    - shell: bash
      name: build
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 自动获取 GitHub Token
      run: |
        chmod +x ./runThisToBuild && ./runThisToBuild
        find ./_site -maxdepth 1 -type f -not \( -name  "*.html" -o -name "*.png" \) -exec rm  {} \;



    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./_site
    
    - name: build for branch
      shell: bash
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 自动获取 GitHub Token
      run: |
        
        echo "--------- build for dist branch ------------"

        cat _config.yml| sed "s/\/jekyll-zeta//g" > tmp.yml
        echo -e "\ndestination: dist" >> tmp.yml
        mv tmp.yml _config.yml
        cat _config.yml
        chmod +x ./runThisToBuild && ./runThisToBuild
        find ./dist -maxdepth 1 -type f -not \( -name  "*.html" -o -name "*.png" \) -exec rm  {} \;
        cd dist
          echo "push to dist branch"

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-bot@example.com"

          DATESTR="$(date -u "+%Y-%m-%dT%H:%M:%SZ")"

          ls -al
          git init 
          git add .
          git status
          git commit -m "Generated by GitHub Actions at ${DATESTR}"
          git checkout -b dist
          echo https://github.com/${{ github.repository }}.git
          git remote add origin https://github.com/${{ github.repository }}.git
 
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:dist -f  
 
      
            
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
  
 
    

